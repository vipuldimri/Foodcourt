
package GUI;

import DataBase.FoodCourtFactory;
import DataBase.FoodCourtMainInterface;
import DataBase.MenuFactory;
import DataBase.MenuInterface;
import foodcourt.Category;
import foodcourt.FoodCourtModel;
import foodcourt.Menu_Items;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author u20o90
 */
public class AddCategory extends javax.swing.JDialog {

    /**
     * Creates new form AddCategory
     */
     DataBufferByte data;
     ArrayList<Category> categ;
     File image;
     FoodCourtModel foodcourt;
    public AddCategory(java.awt.Frame parent, boolean modal,ArrayList<Category> categ, FoodCourtModel foodcourt) 
    {
        
        
        super(parent, modal);
        initComponents();
        this.categ=   categ;
        this.foodcourt = foodcourt;
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - getHeight()) / 2);
        
        
        DisplayCattable();
        setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        CatTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        CatTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sno", "Title 2"
            }
        ));
        CatTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CatTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CatTable);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Image");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name");

        jButton1.setText("ADD Category");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jButton2.setText("Browse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel2)
                        .addGap(102, 102, 102)
                        .addComponent(jButton2)))
                .addGap(66, 66, 66)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(158, 158, 158)
                    .addComponent(jLabel3)
                    .addContainerGap(516, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jButton2))
                        .addGap(58, 58, 58)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(76, 76, 76))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addComponent(jLabel3)
                    .addContainerGap(204, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        JFileChooser chooser;
        FileNameExtensionFilter filter;
        chooser = new JFileChooser();
         image = null;
        ImageIcon photo = null;
        WritableRaster raster;
        chooser.setCurrentDirectory(image);
        filter = new FileNameExtensionFilter("jpeg, gif and png files", "jpg", "gif", "png");
        chooser.addChoosableFileFilter(filter);
        
         int i = chooser.showOpenDialog(this);
           if (i == JFileChooser.APPROVE_OPTION) 
           {
            image = chooser.getSelectedFile();
      
            BufferedImage myImg = null;
         
            try 
            {
                myImg = ImageIO.read(image);
                
                
            } catch (IOException ex) {
                Logger.getLogger(AddCategory.class.getName()).log(Level.SEVERE, null, ex);
            }
               ImageIcon icon = new ImageIcon(myImg);
             jLabel1.setIcon(icon);
     
           }
           
           
           
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here://Add Category button
        
        for(Category c : categ)
        {
            if(c.getName().equalsIgnoreCase(jTextField1.getText().trim()))
            {
                    JOptionPane.showMessageDialog(jPanel1,
                     "Category already Exits",
                     "Inane error",
                      JOptionPane.ERROR_MESSAGE);
                      return ;
                
            }
            
            
        }
        
        
        try
        {
           
                MenuInterface Dao   =  MenuFactory.GetInstance();
                Dao.AddCategory("Demo",jTextField1.getText().trim(),image);  
                      
        }
        catch(Exception ex)
        {
                    JOptionPane.showMessageDialog(jPanel1,
                     "Unable to add category , check internet connection",
                     "Inane error",
                      JOptionPane.ERROR_MESSAGE);
                      return ;
            
        }
        
                       JOptionPane.showMessageDialog(jPanel1,
                     "Category added successfully , Restart Software to see Changes",
                     "Success",
                      JOptionPane.PLAIN_MESSAGE);
                      
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CatTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CatTableMouseClicked
        // TODO add your handling code here:
        Boolean rightmouse = SwingUtilities.isRightMouseButton(evt);
        if(rightmouse)
        {
        int r = CatTable.rowAtPoint(evt.getPoint());
        if (r >= 0 && r < CatTable.getRowCount()) {
            CatTable.setRowSelectionInterval(r, r);
        } else {
            CatTable.clearSelection();
        }

        int rowindex = CatTable.getSelectedRow();
        if (rowindex < 0)
            return;
      
         final  RowPopup2 pop2 = new RowPopup2(CatTable);
         
         DefaultTableModel  model = (DefaultTableModel) CatTable.getModel();
         pop2.CategoryName = model.getValueAt(rowindex, 1).toString();
         pop2.categ = categ;
         pop2.FoodcourtId = foodcourt.getId()+"";
         pop2.show(evt.getComponent(), evt.getX(), evt.getY());
        
        
        }
    }//GEN-LAST:event_CatTableMouseClicked

   
    public Image toImage(BufferedImage bufferedImage) {
        return Toolkit.getDefaultToolkit().createImage(bufferedImage.getSource());
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CatTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void DisplayCattable() {

                  
       DefaultTableModel m = (DefaultTableModel) CatTable.getModel();
       m.setRowCount(0);
       
       int i =1 ;
       for(Category cat : categ)
       {
        DefaultTableModel  model = (DefaultTableModel) CatTable.getModel();
        Object row[] = new Object[2];
      
            row[0] = i;
            row[1] = cat.getName();

            model.addRow(row);
            
            i++;
            
        
       }
    }    
}
class RowPopup2 extends JPopupMenu
{
    String CategoryName;
    String FoodcourtId;
    String CategoryID;
    ArrayList<Category> categ;
    public RowPopup2(JTable table)
    {
        
        JMenuItem delete = new JMenuItem("DELETE Category");
        
        delete.addActionListener((ActionEvent ae) -> 
        {
           
            for (int i = 0; i < categ.size(); i++) {
                if(categ.get(i).getName().equalsIgnoreCase(CategoryName))
                {
                    CategoryID = categ.get(i).getID()+"";
                    break;
                }
            }
         try
         {
            MenuInterface dao = MenuFactory.GetInstance();
            dao.DeleteCategory(FoodcourtId,CategoryID,CategoryName);
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,
            "Internet connection error ,Unable to delette Category",
            "Inane error",
            JOptionPane.ERROR_MESSAGE);
            return;
        }
           JOptionPane.showMessageDialog(this,
            "Category Deleted successfully , System will stop now start again to see changes",
            "Inane error",
            JOptionPane.PLAIN_MESSAGE);
            System.exit(0);
        });
        add(delete);
    }
}