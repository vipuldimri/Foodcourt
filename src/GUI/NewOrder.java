/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DataBase.FoodCourtFactory;
import DataBase.FoodCourtMainInterface;
import DataBase.MenuFactory;
import DataBase.MenuInterface;
import DataStructures.Trie;
import foodcourt.FoodCourtModel;
import foodcourt.Menu_Items;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author u20o90
 */
public class NewOrder extends javax.swing.JFrame {

    /**
     * Creates new form NewOrder
     */
    ArrayList<Menu_Items> items;
    Trie trie;
    FoodCourtModel foodcourt;
    MainScreen mainscreen;
    public NewOrder(FoodCourtModel foodcourt,MainScreen mainscreen) {
        initComponents();
  
       
         
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - getHeight()) / 2);
        setLocation(x, y);
         
        trie = new Trie();
        this.foodcourt = foodcourt;
        this.mainscreen = mainscreen;
       

        GetItems();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        SeachItem = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        list1 = new java.awt.List();
        jScrollPane1 = new javax.swing.JScrollPane();
        BillingTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Order");
        setMaximumSize(new java.awt.Dimension(700, 700));
        setMinimumSize(new java.awt.Dimension(500, 500));
        setResizable(false);

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        SeachItem.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        SeachItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SeachItemKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Search");

        list1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        list1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list1MouseClicked(evt);
            }
        });

        BillingTable.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        BillingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "QTY", "Price"
            }
        ));
        BillingTable.setRowHeight(25);
        BillingTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                BillingTableFocusLost(evt);
            }
        });
        BillingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BillingTableMouseClicked(evt);
            }
        });
        BillingTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BillingTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(BillingTable);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(SeachItem, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SeachItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton8.setText("Cancel");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton7.setText("Clear");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setText("Print");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SeachItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SeachItemKeyReleased
        // TODO add your handling code here:Key relaes
                list1.removeAll();
                String enteredstring =  SeachItem.getText().trim();
                for (Menu_Items item : this.items) {
                if(item.getName().toLowerCase().startsWith(enteredstring.toLowerCase())  || item.getName().toLowerCase().contains(enteredstring.toLowerCase()) )
                {
                    list1.add(item.getName());
                }
                
        }
                
        
    }//GEN-LAST:event_SeachItemKeyReleased

    private void list1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list1MouseClicked
        // TODO add your handling code here:
       
        if(list1.getSelectedIndex() == -1)
        {
            return;
        }
        
        try{
            SeachItem.setText("");
        for(Menu_Items item : items)
        {
            if(item.getName().toLowerCase().equalsIgnoreCase(list1.getSelectedItem().toLowerCase()))
            {
                DefaultTableModel  model = (DefaultTableModel) BillingTable.getModel();
                Object row[] = new Object[3];
      
                row[0] = item.getName();
                row[1] = "1";
                row[2] = item.getPrice();
                model.addRow(row);
       
                list1.removeAll();
                break;
            }
            
        }
        }catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_list1MouseClicked
    //code for bill makinng
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

            DefaultTableModel  model = (DefaultTableModel) BillingTable.getModel();
            int rows = model.getRowCount();
            if(rows == 0)
            {
                                    JOptionPane.showMessageDialog(this,
                                    "Can't take empty order",
                                      "Inane error",
                                     JOptionPane.ERROR_MESSAGE);
                                    return;
            }
            float Total = 0;
                 
            for(int i = 0 ; i < rows ;  i ++)
            {
                        
            Total = Total + Float.valueOf(""+ model.getValueAt(i, 2));
      
                
            }
        
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Checkout Total amount  "+Total, "Bill Confirmation", dialogButton);
        if(dialogResult == 0) {
          System.out.println("Yes option");
        } else {
          System.out.println("No Option");
          return;
        } 
        //Updating the collection
        try
        {
            FoodCourtMainInterface dao = FoodCourtFactory.GetInstance();
            dao.updatecollection(foodcourt.getName(), Total);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,
            "Internet connection error",
            "Inane error",
            JOptionPane.ERROR_MESSAGE);
        }
   			
   



     
           PrinterService printerService = new PrinterService();

           System.out.println(printerService.getPrinters());
           Date d = new Date();
           String demo = "";
         for(int i = 0 ; i < rows ; i ++)
        {
            String Name = model.getValueAt(i, 0).toString();
           
       
           String ans = "";
           boolean first = true;
           if(Name.length() > 15)
           {
                  String fff[] = Name.split(" ");
                  demo = demo + "|"+ (i+1) +"|  "+model.getValueAt(i, 0).toString().substring(0,14)+"- | "+model.getValueAt(i, 1)+"   | "+model.getValueAt(i, 2)+"\n";
                  demo = demo + "     "+model.getValueAt(i, 0).toString().substring(15)+"\n";
           }else {
                int ll = Name.length();
                int spaces = 15-ll;
                String spa ="";
                for(int o=0;o<spaces;o++){
                    spa = spa+ " ";
                }
                demo = demo + "|"+ (i+1) +"|  "+model.getValueAt(i, 0)+spa+" | "+model.getValueAt(i, 1)+"   | "+model.getValueAt(i, 2)+"\n";

           }
            
        }
      //Header Text 
        String s = "                  | Welcome | \n                  Swaad Sadan \n "+
                "         "+d+"\n           Tiffins | Chatt | Juice \n\nORDER "+
                "DETAILS \n-------------\nSno | ItemName       | QTY | Price \n"+
                "----------------------------------\n";

           s = s + demo;
           s = s + "\n Total Rs:- "+Total;
           s = s + "\n\n-----------------------\n";
           s = s + "Thank you , Visit again\n";
           s = s + "Contact Us \n";
           s = s + "9718327876\n";
           s = s + "-----------------------\n";
           s = s + "Powered by Stark Technologies";
           s += "\n\n\n\n\n\n\n\n";

           try
           {
           //print some stuff. Change the printer name to your thermal printer name.
            printerService.printString("EPSON TM-T88IV Receipt", 
             s);
             // cut that paper!
             byte[] cutP = new byte[] { 0x1d, 'V', 1 };

             printerService.printBytes("EPSON TM-T88IV Receipt", cutP);
           }
           catch(Exception e)
           {
               JOptionPane.showMessageDialog(this,
            "Printer error",
            "Error",
            JOptionPane.ERROR_MESSAGE);                 
           }

            DefaultTableModel dm = (DefaultTableModel) BillingTable.getModel();
            int rowCount = dm.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);}
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void BillingTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BillingTableKeyReleased
        // TODO add your handling code here:
            DefaultTableModel  model = (DefaultTableModel) BillingTable.getModel();
            int rows = model.getRowCount();
        
                 
            for(int i = 0 ; i < rows ;  i ++)
            {
                int qty = -1;        
     try{
                  qty = Integer.valueOf(""+ model.getValueAt(i, 1));
     }catch(NumberFormatException e)
     {
                      JOptionPane.showMessageDialog(this,
                     "Enter valid qty",
                     "Inane error",
                      JOptionPane.ERROR_MESSAGE);
                      return ;
     }
     if(qty == -1){ return;}
            if(qty != 1)
            {
                float value=0;
               for(Menu_Items item : items)
                {
                if(item.getName().toLowerCase().equalsIgnoreCase(model.getValueAt(i, 0).toString().toLowerCase()))
                {
               
                  value = qty * Float.valueOf(item.getPrice());
                  break;
                  }
            
                  }
                model.setValueAt(value, i, 2);
            }
      
                
            }
        
    }//GEN-LAST:event_BillingTableKeyReleased

    private void BillingTableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BillingTableFocusLost
        // TODO add your handling code here:
        
        return;
//            DefaultTableModel  model = (DefaultTableModel) BillingTable.getModel();
//            int rows = model.getRowCount();
//        
//                 
//            for(int i = 0 ; i < rows ;  i ++)
//            {
//                    int qty= -1;    
//               try{
//                  qty = Integer.valueOf(""+ model.getValueAt(i, 1));
//                   }catch(NumberFormatException e)
//                 {
//                      JOptionPane.showMessageDialog(this,
//                     "Enter valid qty",
//                     "Inane error",
//                      JOptionPane.ERROR_MESSAGE);
//                      return ;
//                }
//            if(qty != 1)
//            {
//                float value=0;
//               for(Menu_Items item : items)
//                {
//                 if(item.getName().toLowerCase().equalsIgnoreCase(model.getValueAt(i, 0).toString().toLowerCase()))
//                {
//               
//                  value = qty * Float.valueOf(item.getPrice());
//                  break;
//                  }
//            
//                  }
//                model.setValueAt(value, i, 2);
//            }
//      
//                
//            }
//        
    }//GEN-LAST:event_BillingTableFocusLost

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    
         
            DefaultTableModel dm = (DefaultTableModel) BillingTable.getModel();
            int rowCount = dm.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
}
    }//GEN-LAST:event_jButton7ActionPerformed

    private void BillingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BillingTableMouseClicked
        // TODO add your handling code here:
        Boolean rightmouse = SwingUtilities.isRightMouseButton(evt);
        if(rightmouse)
        {
        int r = BillingTable.rowAtPoint(evt.getPoint());
        if (r >= 0 && r < BillingTable.getRowCount()) {
            BillingTable.setRowSelectionInterval(r, r);
        } else {
            BillingTable.clearSelection();
        }

        int rowindex = BillingTable.getSelectedRow();
        if (rowindex < 0)
            return;
      
         final  RowPopup pop = new RowPopup(BillingTable);
         pop.rowindex = rowindex;
         pop.show(evt.getComponent(), evt.getX(), evt.getY());
        
        
        }
    }//GEN-LAST:event_BillingTableMouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        mainscreen.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BillingTable;
    private javax.swing.JTextField SeachItem;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables

   private void GetItems() 
    {
        
        MenuInterface Dao = MenuFactory.GetInstance();
        try
        {
            this.items = Dao.GetItems(foodcourt.getName(),trie);
        }
        catch (Exception ex) 
        {
            System.out.println("Failed loading items"+ex);
            return;
        }
        
        
    }
private static PrintService findPrintService(String printerName) {
        PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
        for (PrintService printService : printServices) {
            if (printService.getName().trim().equals(printerName)) {
                return printService;
            }
        }
        return null;
    }

}
class RowPopup extends JPopupMenu
{
    int rowindex;
    public RowPopup(JTable table)
    {
        
        JMenuItem delete = new JMenuItem("DELETE");
        
        delete.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                
            DefaultTableModel dm = (DefaultTableModel) table.getModel();
            dm.removeRow(rowindex);
            }
        });
        add(delete);
    }
}
